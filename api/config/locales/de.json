{
	"api": {
		"auth": {
			"signup": {
				"success": "Konto erfolgreich erstellt",
				"emailExists": "E-Mail wird bereits verwendet"
			},
			"login": {
				"success": "Abmeldung erfolgreich",
				"invalidCredentials": "Ungültige E-Mail oder Passwort"
			},
			"logout": {
				"success": "Logout successful",
				"invalidCredentials": "Ungültige E-Mail oder Passwort"
			},
			"editUser": {
				"userNotFound": "Benutzer nicht gefunden.",
				"profileUpdated": "Profil erfolgreich aktualisiert.",
				"invalidCredentials": "Ungültige E-Mail oder Passwort"
			},
			"validation": {
				"emailRequired": "E-Mail ist erforderlich",
				"passwordRequired": "Passwort ist erforderlich"
			},
			"delete": {
				"usernotFound": "Benutzer nicht gefunden",
				"successDelete": "Benutzer erfolgreich gelöscht"
			},
			"search": {
				"success": "Suche erfolgreich"
			}
		},
		"categories": {
			"nameRequired": "Kategoriename ist erforderlich",
			"alreadyExists": "Kategorie existiert bereits",
			"addSuccess": "Kategorie erfolgreich hinzugefügt",
			"notFound": "Kategorie nicht gefunden",
			"deleted": "Kategorie und Unterkategorien erfolgreich gelöscht",
			"listSuccess": "api.categories.listSuccess",
			"add OK": "api.categories.add OK",
			"update OK": "api.categories.update OK",
			"list OK": "api.categories.list OK"
		},
		"subcategories": {
			"allFieldsRequired": "Alle Felder sind erforderlich",
			"alreadyExists": "Unterkategorie existiert bereits",
			"addSuccess": "Unterkategorie erfolgreich hinzugefügt",
			"addsuccess": "api.subcategories.addsuccess"
		},
		"countries": {
			"nameRequired": "Ländername ist erforderlich",
			"alreadyExists": "Land existiert bereits",
			"addSuccess": "Land wurde erfolgreich hinzugefügt",
			"notFound": "Land nicht gefunden",
			"deleted": "Land und Unterkategorien wurden erfolgreich gelöscht"
		},
		"cities": {
			"allFieldsRequired": "Alle Felder sind erforderlich",
			"alreadyExists": "Städte existieren bereits",
			"addSuccess": "Städte wurden erfolgreich hinzugefügt",
			"invalidInput": "api.cities.invalidInput",
			"addsuccess": "api.cities.addsuccess"
		},
		"errors": {
			"serverError": "Interner Serverfehler",
			"unauthorized": "Unbefugter Zugriff"
		}
	}
}